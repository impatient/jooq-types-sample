/*
 * This file is generated by jOOQ.
 */
package org.jooq.sample;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.sample.tables.Address;
import org.jooq.sample.tables.FlywaySchemaHistory;
import org.jooq.sample.tables.Person;
import org.jooq.sample.tables.Phone;
import org.jooq.sample.tables.records.AddressRecord;
import org.jooq.sample.tables.records.FlywaySchemaHistoryRecord;
import org.jooq.sample.tables.records.PersonRecord;
import org.jooq.sample.tables.records.PhoneRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>jooq_sample</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AddressRecord, Long> IDENTITY_ADDRESS = Identities0.IDENTITY_ADDRESS;
    public static final Identity<PersonRecord, Long> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<PhoneRecord, Long> IDENTITY_PHONE = Identities0.IDENTITY_PHONE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AddressRecord> ADDRESS_PKEY = UniqueKeys0.ADDRESS_PKEY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<PersonRecord> PERSON_PKEY = UniqueKeys0.PERSON_PKEY;
    public static final UniqueKey<PhoneRecord> PHONE_PKEY = UniqueKeys0.PHONE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AddressRecord, PersonRecord> ADDRESS__ADDRESS_PERSON_ID_FKEY = ForeignKeys0.ADDRESS__ADDRESS_PERSON_ID_FKEY;
    public static final ForeignKey<PhoneRecord, PersonRecord> PHONE__PHONE_PERSON_ID_FKEY = ForeignKeys0.PHONE__PHONE_PERSON_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AddressRecord, Long> IDENTITY_ADDRESS = Internal.createIdentity(Address.ADDRESS, Address.ADDRESS.ID);
        public static Identity<PersonRecord, Long> IDENTITY_PERSON = Internal.createIdentity(Person.PERSON, Person.PERSON.ID);
        public static Identity<PhoneRecord, Long> IDENTITY_PHONE = Internal.createIdentity(Phone.PHONE, Phone.PHONE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AddressRecord> ADDRESS_PKEY = Internal.createUniqueKey(Address.ADDRESS, "address_pkey", Address.ADDRESS.ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<PersonRecord> PERSON_PKEY = Internal.createUniqueKey(Person.PERSON, "person_pkey", Person.PERSON.ID);
        public static final UniqueKey<PhoneRecord> PHONE_PKEY = Internal.createUniqueKey(Phone.PHONE, "phone_pkey", Phone.PHONE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AddressRecord, PersonRecord> ADDRESS__ADDRESS_PERSON_ID_FKEY = Internal.createForeignKey(org.jooq.sample.Keys.PERSON_PKEY, Address.ADDRESS, "address__address_person_id_fkey", Address.ADDRESS.PERSON_ID);
        public static final ForeignKey<PhoneRecord, PersonRecord> PHONE__PHONE_PERSON_ID_FKEY = Internal.createForeignKey(org.jooq.sample.Keys.PERSON_PKEY, Phone.PHONE, "phone__phone_person_id_fkey", Phone.PHONE.PERSON_ID);
    }
}
