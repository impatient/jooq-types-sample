/*
 * This file is generated by jOOQ.
 */
package org.jooq.sample;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Result;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.UDT;
import org.jooq.impl.SchemaImpl;
import org.jooq.sample.tables.Address;
import org.jooq.sample.tables.AllPersons;
import org.jooq.sample.tables.FlywaySchemaHistory;
import org.jooq.sample.tables.Person;
import org.jooq.sample.tables.Phone;
import org.jooq.sample.tables.records.AllPersonsRecord;
import org.jooq.sample.udt.FullPersonRecord;
import org.jooq.sample.udt.UdtAddress;
import org.jooq.sample.udt.UdtPerson;
import org.jooq.sample.udt.UdtPhone;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqSample extends SchemaImpl {

    private static final long serialVersionUID = 1402729566;

    /**
     * The reference instance of <code>jooq_sample</code>
     */
    public static final JooqSample JOOQ_SAMPLE = new JooqSample();

    /**
     * The table <code>jooq_sample.address</code>.
     */
    public final Address ADDRESS = org.jooq.sample.tables.Address.ADDRESS;

    /**
     * The table <code>jooq_sample.all_persons</code>.
     */
    public final AllPersons ALL_PERSONS = org.jooq.sample.tables.AllPersons.ALL_PERSONS;

    /**
     * Call <code>jooq_sample.all_persons</code>.
     */
    public static Result<AllPersonsRecord> ALL_PERSONS(Configuration configuration) {
        return configuration.dsl().selectFrom(org.jooq.sample.tables.AllPersons.ALL_PERSONS.call()).fetch();
    }

    /**
     * Get <code>jooq_sample.all_persons</code> as a table.
     */
    public static AllPersons ALL_PERSONS() {
        return org.jooq.sample.tables.AllPersons.ALL_PERSONS.call();
    }

    /**
     * The table <code>jooq_sample.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = org.jooq.sample.tables.FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>jooq_sample.person</code>.
     */
    public final Person PERSON = org.jooq.sample.tables.Person.PERSON;

    /**
     * The table <code>jooq_sample.phone</code>.
     */
    public final Phone PHONE = org.jooq.sample.tables.Phone.PHONE;

    /**
     * No further instances allowed
     */
    private JooqSample() {
        super("jooq_sample", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.SHARED_SEQUENCE);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Address.ADDRESS,
            AllPersons.ALL_PERSONS,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Person.PERSON,
            Phone.PHONE);
    }

    @Override
    public final List<UDT<?>> getUDTs() {
        List result = new ArrayList();
        result.addAll(getUDTs0());
        return result;
    }

    private final List<UDT<?>> getUDTs0() {
        return Arrays.<UDT<?>>asList(
            FullPersonRecord.FULL_PERSON_RECORD,
            UdtAddress.UDT_ADDRESS,
            UdtPerson.UDT_PERSON,
            UdtPhone.UDT_PHONE);
    }
}
