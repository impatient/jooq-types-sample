/*
 * This file is generated by jOOQ.
 */
package org.jooq.sample.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.sample.tables.Address;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record5<Long, Long, String, String, String> {

    private static final long serialVersionUID = -360069756;

    /**
     * Setter for <code>jooq_sample.address.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq_sample.address.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq_sample.address.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq_sample.address.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>jooq_sample.address.address_1</code>.
     */
    public void setAddress_1(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq_sample.address.address_1</code>.
     */
    public String getAddress_1() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_sample.address.city</code>.
     */
    public void setCity(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooq_sample.address.city</code>.
     */
    public String getCity() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq_sample.address.extraneous</code>.
     */
    public void setExtraneous(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>jooq_sample.address.extraneous</code>.
     */
    public String getExtraneous() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Address.ADDRESS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Address.ADDRESS.PERSON_ID;
    }

    @Override
    public Field<String> field3() {
        return Address.ADDRESS.ADDRESS_1;
    }

    @Override
    public Field<String> field4() {
        return Address.ADDRESS.CITY;
    }

    @Override
    public Field<String> field5() {
        return Address.ADDRESS.EXTRANEOUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPersonId();
    }

    @Override
    public String component3() {
        return getAddress_1();
    }

    @Override
    public String component4() {
        return getCity();
    }

    @Override
    public String component5() {
        return getExtraneous();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPersonId();
    }

    @Override
    public String value3() {
        return getAddress_1();
    }

    @Override
    public String value4() {
        return getCity();
    }

    @Override
    public String value5() {
        return getExtraneous();
    }

    @Override
    public AddressRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AddressRecord value2(Long value) {
        setPersonId(value);
        return this;
    }

    @Override
    public AddressRecord value3(String value) {
        setAddress_1(value);
        return this;
    }

    @Override
    public AddressRecord value4(String value) {
        setCity(value);
        return this;
    }

    @Override
    public AddressRecord value5(String value) {
        setExtraneous(value);
        return this;
    }

    @Override
    public AddressRecord values(Long value1, Long value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(Long id, Long personId, String address_1, String city, String extraneous) {
        super(Address.ADDRESS);

        set(0, id);
        set(1, personId);
        set(2, address_1);
        set(3, city);
        set(4, extraneous);
    }
}
